//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'oa_semantics.h'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                        may 8th, 2010, at 21h45'7"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef oa_semantics_DEFINED
#define oa_semantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_M_processor ;
class GGS_M_network ;
class GGS_AC_canMessage ;
class cPtr_AC_canMessage ;
class GGS_C_canIndependantMessage ;
class cPtr_C_canIndependantMessage ;
class GGS_C_canMessageFromMessage ;
class cPtr_C_canMessageFromMessage ;
class GGS_C_canMessageFromTask ;
class cPtr_C_canMessageFromTask ;
class GGS_M_messages ;
class GGS_AC_task ;
class cPtr_AC_task ;
class GGS_C_independantTask ;
class cPtr_C_independantTask ;
class GGS_C_taskDependsFromTask ;
class cPtr_C_taskDependsFromTask ;
class GGS_C_taskDependsFromMessage ;
class cPtr_C_taskDependsFromMessage ;
class GGS_M_tasks ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@M_processor'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_processor ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_processor ;

//---------------------------------------------------------------------------*

class GGS_M_processor : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_processor cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_processor & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_processor & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_processor castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_processor * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_processor * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_processor constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_processor constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0,
                                             const GGS_luint & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_luint &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_luint   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_luint & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_processor constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_processor & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_processor reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_processor & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_processor & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mStep (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@M_network'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_network ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_network ;

//---------------------------------------------------------------------------*

class GGS_M_network : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_network cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_network & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_network & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_network castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_network * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_network * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_network constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_network constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0,
                                             const GGS_bool& inValue1,
                                             const GGS_luint & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_luint &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_luint   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_luint & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_luint & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_network constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_network & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_network reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_network & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_network & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mCANnetwork (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mScalingFactor (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_AC_canMessage'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_canMessage ;

//---------------------------------------------------------------------------*

class GGS_AC_canMessage : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_canMessage (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_canMessage (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_canMessage (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_canMessage
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_canMessage * getPtr (void) const {
    return (cPtr_AC_canMessage *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_canMessage * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_canMessage * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_canMessage *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_canMessage castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_canMessage ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_canIndependantMessage'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_canIndependantMessage ;

//---------------------------------------------------------------------------*

class GGS_C_canIndependantMessage : public GGS_AC_canMessage {
//--- Default constructor
  public : inline GGS_C_canIndependantMessage (void) :
  GGS_AC_canMessage () {}

//--- Pointer assignment constructor
  public : GGS_C_canIndependantMessage (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_canIndependantMessage (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_canIndependantMessage
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_canIndependantMessage constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_canIndependantMessage * getPtr (void) const {
    return (cPtr_C_canIndependantMessage *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_canIndependantMessage * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_canIndependantMessage * operator () (LOCATION_ARGS) const {
      return (cPtr_C_canIndependantMessage *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_canIndependantMessage castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_canIndependantMessage ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_canMessageFromMessage'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_canMessageFromMessage ;

//---------------------------------------------------------------------------*

class GGS_C_canMessageFromMessage : public GGS_AC_canMessage {
//--- Default constructor
  public : inline GGS_C_canMessageFromMessage (void) :
  GGS_AC_canMessage () {}

//--- Pointer assignment constructor
  public : GGS_C_canMessageFromMessage (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_canMessageFromMessage (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_canMessageFromMessage
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_canMessageFromMessage constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_canMessageFromMessage * getPtr (void) const {
    return (cPtr_C_canMessageFromMessage *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMessageIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_canMessageFromMessage * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_canMessageFromMessage * operator () (LOCATION_ARGS) const {
      return (cPtr_C_canMessageFromMessage *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_canMessageFromMessage castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_canMessageFromMessage ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_canMessageFromTask'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_canMessageFromTask ;

//---------------------------------------------------------------------------*

class GGS_C_canMessageFromTask : public GGS_AC_canMessage {
//--- Default constructor
  public : inline GGS_C_canMessageFromTask (void) :
  GGS_AC_canMessage () {}

//--- Pointer assignment constructor
  public : GGS_C_canMessageFromTask (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_canMessageFromTask (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_canMessageFromTask
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_canMessageFromTask constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_canMessageFromTask * getPtr (void) const {
    return (cPtr_C_canMessageFromTask *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mTaskIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_canMessageFromTask * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_canMessageFromTask * operator () (LOCATION_ARGS) const {
      return (cPtr_C_canMessageFromTask *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_canMessageFromTask castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_canMessageFromTask ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@M_messages'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_messages ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_messages ;

//---------------------------------------------------------------------------*

class GGS_M_messages : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_messages cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_messages & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_messages & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_messages castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_messages * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_messages * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_messages constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_messages constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0,
                                             const GGS_luint & inValue1,
                                             const GGS_uint & inValue2,
                                             const GGS_luint & inValue3,
                                             const GGS_luint & inValue4,
                                             const GGS_luint & inValue5,
                                             const GGS_luint & inValue6,
                                             const GGS_luint & inValue7,
                                             const GGS_AC_canMessage & inValue8
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_luint &  inParameter1,
                                const GGS_uint &  inParameter2,
                                const GGS_luint &  inParameter3,
                                const GGS_luint &  inParameter4,
                                const GGS_luint &  inParameter5,
                                const GGS_luint &  inParameter6,
                                const GGS_luint &  inParameter7,
                                const GGS_AC_canMessage &  inParameter8 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_luint   & outParameter1,
                                GGS_uint   & outParameter2,
                                GGS_luint   & outParameter3,
                                GGS_luint   & outParameter4,
                                GGS_luint   & outParameter5,
                                GGS_luint   & outParameter6,
                                GGS_luint   & outParameter7,
                                GGS_AC_canMessage   & outParameter8 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_luint & inParameter1,
                                   const GGS_uint & inParameter2,
                                   const GGS_luint & inParameter3,
                                   const GGS_luint & inParameter4,
                                   const GGS_luint & inParameter5,
                                   const GGS_luint & inParameter6,
                                   const GGS_luint & inParameter7,
                                   const GGS_AC_canMessage & inParameter8,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint & outParameter1,
                                   GGS_uint & outParameter2,
                                   GGS_luint & outParameter3,
                                   GGS_luint & outParameter4,
                                   GGS_luint & outParameter5,
                                   GGS_luint & outParameter6,
                                   GGS_luint & outParameter7,
                                   GGS_AC_canMessage & outParameter8,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_messages constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_messages & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_messages reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_messages & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_messages & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mClass (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mNetworkIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mBytesCount (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mPriority (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mOffset (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mDeadline (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mPeriod (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_canMessage   & _mMessageKind (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS class 'GGS_AC_task'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_task ;

//---------------------------------------------------------------------------*

class GGS_AC_task : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_task (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_task (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_task (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_task
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_task * getPtr (void) const {
    return (cPtr_AC_task *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_task * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_task * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_task *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_task castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_task ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_independantTask'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_independantTask ;

//---------------------------------------------------------------------------*

class GGS_C_independantTask : public GGS_AC_task {
//--- Default constructor
  public : inline GGS_C_independantTask (void) :
  GGS_AC_task () {}

//--- Pointer assignment constructor
  public : GGS_C_independantTask (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_independantTask (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_independantTask
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_independantTask constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_independantTask * getPtr (void) const {
    return (cPtr_C_independantTask *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_independantTask * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_independantTask * operator () (LOCATION_ARGS) const {
      return (cPtr_C_independantTask *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_independantTask castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_independantTask ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_taskDependsFromTask'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_taskDependsFromTask ;

//---------------------------------------------------------------------------*

class GGS_C_taskDependsFromTask : public GGS_AC_task {
//--- Default constructor
  public : inline GGS_C_taskDependsFromTask (void) :
  GGS_AC_task () {}

//--- Pointer assignment constructor
  public : GGS_C_taskDependsFromTask (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_taskDependsFromTask (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_taskDependsFromTask
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_taskDependsFromTask constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_luint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_taskDependsFromTask * getPtr (void) const {
    return (cPtr_C_taskDependsFromTask *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mTask (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_luint  reader_mEvery (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_taskDependsFromTask * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_taskDependsFromTask * operator () (LOCATION_ARGS) const {
      return (cPtr_C_taskDependsFromTask *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_taskDependsFromTask castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_taskDependsFromTask ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_C_taskDependsFromMessage'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_taskDependsFromMessage ;

//---------------------------------------------------------------------------*

class GGS_C_taskDependsFromMessage : public GGS_AC_task {
//--- Default constructor
  public : inline GGS_C_taskDependsFromMessage (void) :
  GGS_AC_task () {}

//--- Pointer assignment constructor
  public : GGS_C_taskDependsFromMessage (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_taskDependsFromMessage (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_taskDependsFromMessage
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_taskDependsFromMessage constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_luint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_taskDependsFromMessage * getPtr (void) const {
    return (cPtr_C_taskDependsFromMessage *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_luint  reader_mEvery (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_taskDependsFromMessage * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_taskDependsFromMessage * operator () (LOCATION_ARGS) const {
      return (cPtr_C_taskDependsFromMessage *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_taskDependsFromMessage castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_taskDependsFromMessage ;

//---------------------------------------------------------------------------*
//                                                                           *
//                              Map '@M_tasks'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_tasks ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_tasks ;

//---------------------------------------------------------------------------*

class GGS_M_tasks : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_tasks cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_tasks & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_tasks & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_tasks castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_tasks * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_tasks * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_tasks constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_tasks constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0,
                                             const GGS_luint & inValue1,
                                             const GGS_luint & inValue2,
                                             const GGS_luint & inValue3,
                                             const GGS_luint & inValue4,
                                             const GGS_luint & inValue5,
                                             const GGS_uint & inValue6,
                                             const GGS_luint & inValue7,
                                             const GGS_AC_task & inValue8
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_luint &  inParameter1,
                                const GGS_luint &  inParameter2,
                                const GGS_luint &  inParameter3,
                                const GGS_luint &  inParameter4,
                                const GGS_luint &  inParameter5,
                                const GGS_uint &  inParameter6,
                                const GGS_luint &  inParameter7,
                                const GGS_AC_task &  inParameter8 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_luint   & outParameter1,
                                GGS_luint   & outParameter2,
                                GGS_luint   & outParameter3,
                                GGS_luint   & outParameter4,
                                GGS_luint   & outParameter5,
                                GGS_uint   & outParameter6,
                                GGS_luint   & outParameter7,
                                GGS_AC_task   & outParameter8 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_luint & inParameter1,
                                   const GGS_luint & inParameter2,
                                   const GGS_luint & inParameter3,
                                   const GGS_luint & inParameter4,
                                   const GGS_luint & inParameter5,
                                   const GGS_uint & inParameter6,
                                   const GGS_luint & inParameter7,
                                   const GGS_AC_task & inParameter8,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint & outParameter1,
                                   GGS_luint & outParameter2,
                                   GGS_luint & outParameter3,
                                   GGS_luint & outParameter4,
                                   GGS_luint & outParameter5,
                                   GGS_uint & outParameter6,
                                   GGS_luint & outParameter7,
                                   GGS_AC_task & outParameter8,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_tasks constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_tasks & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_tasks reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_tasks & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_tasks & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mPriority (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mOffset (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mDeadline (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mDurationMin (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mDurationMax (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mProcessor (LOCATION_ARGS) const ;
    public : /* const */ GGS_luint   & _mPeriod (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_task   & _mTaskKind (LOCATION_ARGS) const ;
  } ;
} ;

void routine_performComputations (C_Compiler &,
                                GGS_M_processor  &,
                                GGS_M_network  &,
                                GGS_M_messages  &,
                                GGS_M_tasks  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@M_processor'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_processor {
  public : GGS_uint  mIndex ;
  public : GGS_luint  mStep ;

  public : e_M_processor (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_processor : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_processor (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_processor & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_processor * nextObject (void) const { return (elementOf_GGS_M_processor *) mNextItem ; }
  public : inline elementOf_GGS_M_processor * infObject (void) const { return (elementOf_GGS_M_processor *) mInfPtr ; }
  public : inline elementOf_GGS_M_processor * supObject (void) const { return (elementOf_GGS_M_processor *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_processor mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@M_network'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_network {
  public : GGS_uint  mIndex ;
  public : GGS_bool mCANnetwork ;
  public : GGS_luint  mScalingFactor ;

  public : e_M_network (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_network : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_network (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_network & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_network * nextObject (void) const { return (elementOf_GGS_M_network *) mNextItem ; }
  public : inline elementOf_GGS_M_network * infObject (void) const { return (elementOf_GGS_M_network *) mInfPtr ; }
  public : inline elementOf_GGS_M_network * supObject (void) const { return (elementOf_GGS_M_network *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_network mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_canMessage.h"

//---------------------------------------------------------------------------*

#include "include_C_canIndependantMessage.h"

//---------------------------------------------------------------------------*

#include "include_C_canMessageFromMessage.h"

//---------------------------------------------------------------------------*

#include "include_C_canMessageFromTask.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@M_messages'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_messages {
  public : GGS_uint  mIndex ;
  public : GGS_luint  mClass ;
  public : GGS_uint  mNetworkIndex ;
  public : GGS_luint  mBytesCount ;
  public : GGS_luint  mPriority ;
  public : GGS_luint  mOffset ;
  public : GGS_luint  mDeadline ;
  public : GGS_luint  mPeriod ;
  public : GGS_AC_canMessage  mMessageKind ;

  public : e_M_messages (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_messages : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_messages (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_messages & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_messages * nextObject (void) const { return (elementOf_GGS_M_messages *) mNextItem ; }
  public : inline elementOf_GGS_M_messages * infObject (void) const { return (elementOf_GGS_M_messages *) mInfPtr ; }
  public : inline elementOf_GGS_M_messages * supObject (void) const { return (elementOf_GGS_M_messages *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_messages mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_task.h"

//---------------------------------------------------------------------------*

#include "include_C_independantTask.h"

//---------------------------------------------------------------------------*

#include "include_C_taskDependsFromTask.h"

//---------------------------------------------------------------------------*

#include "include_C_taskDependsFromMessage.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@M_tasks'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_tasks {
  public : GGS_uint  mIndex ;
  public : GGS_luint  mPriority ;
  public : GGS_luint  mOffset ;
  public : GGS_luint  mDeadline ;
  public : GGS_luint  mDurationMin ;
  public : GGS_luint  mDurationMax ;
  public : GGS_uint  mProcessor ;
  public : GGS_luint  mPeriod ;
  public : GGS_AC_task  mTaskKind ;

  public : e_M_tasks (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_tasks : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_tasks (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_tasks & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_tasks * nextObject (void) const { return (elementOf_GGS_M_tasks *) mNextItem ; }
  public : inline elementOf_GGS_M_tasks * infObject (void) const { return (elementOf_GGS_M_tasks *) mInfPtr ; }
  public : inline elementOf_GGS_M_tasks * supObject (void) const { return (elementOf_GGS_M_tasks *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_tasks mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
